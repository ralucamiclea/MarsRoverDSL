package test.master;
import lejos.robotics.subsumption.Behavior;
import lejos.utility.Delay;

public class MeasureLake implements Behavior{
			
	Goals goals;
	ModelMaster m;
	private boolean suppressed = false;
	
	public MeasureLake(ModelMaster m, Goals goals){
		this.m = m;
		this.goals = goals;
	}
	
	@Override
	public boolean takeControl() {
		m.distance.fetchSample(m.distanceSamples, 0);
		return m.distanceSamples[0] > m.lakedepth && m.distanceSamples[0] < 0.10;
	}
	
	@Override
	public void action() {
		goals.MeasureLake++;
		suppressed = false;
		float g;
		g = m.g;
		m.lm.backward();
		m.rm.forward();
		m.lm.setSpeed(200);
		m.rm.setSpeed(200);
		while(m.g < (g+175) && !suppressed){
			Thread.yield();
		}
		m.lm.setSpeed(300);
		m.rm.setSpeed(300);
		m.ma.rotate(-90,false);
		m.ma.rotate(90,false);
		Delay.msDelay(100);
		m.rm.forward();
		Delay.msDelay(100);
	}
	
	@Override
	public void suppress() {
		suppressed = true;
	}
}
