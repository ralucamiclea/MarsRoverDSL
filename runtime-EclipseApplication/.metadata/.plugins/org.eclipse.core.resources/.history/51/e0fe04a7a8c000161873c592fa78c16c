	package test.master;
	
	import lejos.robotics.subsumption.Arbitrator;
	import lejos.robotics.subsumption.Behavior;
	
	public class MainMaster {
	
	public static void main(String[] args) {
		
	ModelMaster m = new ModelMaster();
	Goals goals = new Goals();
	GetMessageMaster t = new GetMessageMaster(m);
	t.start();
		
	//behaviors in this expedition
	Behavior AvoidEdge = new AvoidEdge(m,goals);
	Behavior AvoidCollision = new AvoidCollision(m,goals);
	Behavior FindBlue = new FindBlue(m,goals);
	Behavior DriveForward = new DriveForward(m);
	//mission "AvoidStuff"
	int AvoidStuffCount = 0;
	Behavior [] bArrayAvoidStuff = {
		DriveForward
		, AvoidCollision
		, AvoidEdge
	};
	Arbitrator arbyAvoidStuff = new Arbitrator(bArrayAvoidStuff);
	arbyAvoidStuff.go();
	
	if(0 == AvoidStuffCount)
		arby.stop();
	//mission "FollowLine"
	int FollowLineCount = 0;
	Behavior [] bArrayFollowLine = {
		DriveForward
		, AvoidEdge
		, FindBlue
	};
	Arbitrator arbyFollowLine = new Arbitrator(bArrayFollowLine);
	arbyFollowLine.go();
	
	//wait 2 times for FindBlue
	if(goals.FindBlue == 2)
		FollowLineCount++;
	if(1 == FollowLineCount)
		arby.stop();
	}
}
