/**
 * generated by Xtext 2.10.0
 */
package robot.dSL.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import robot.dSL.DSLPackage;
import robot.dSL.TouchEnum;
import robot.dSL.TouchLiteral;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Touch Literal</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link robot.dSL.impl.TouchLiteralImpl#getTouch <em>Touch</em>}</li>
 * </ul>
 *
 * @generated
 */
public class TouchLiteralImpl extends ExpressionImpl implements TouchLiteral
{
  /**
   * The default value of the '{@link #getTouch() <em>Touch</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTouch()
   * @generated
   * @ordered
   */
  protected static final TouchEnum TOUCH_EDEFAULT = TouchEnum.LEFT;

  /**
   * The cached value of the '{@link #getTouch() <em>Touch</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTouch()
   * @generated
   * @ordered
   */
  protected TouchEnum touch = TOUCH_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected TouchLiteralImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return DSLPackage.Literals.TOUCH_LITERAL;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public TouchEnum getTouch()
  {
    return touch;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setTouch(TouchEnum newTouch)
  {
    TouchEnum oldTouch = touch;
    touch = newTouch == null ? TOUCH_EDEFAULT : newTouch;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DSLPackage.TOUCH_LITERAL__TOUCH, oldTouch, touch));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case DSLPackage.TOUCH_LITERAL__TOUCH:
        return getTouch();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case DSLPackage.TOUCH_LITERAL__TOUCH:
        setTouch((TouchEnum)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case DSLPackage.TOUCH_LITERAL__TOUCH:
        setTouch(TOUCH_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case DSLPackage.TOUCH_LITERAL__TOUCH:
        return touch != TOUCH_EDEFAULT;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (touch: ");
    result.append(touch);
    result.append(')');
    return result.toString();
  }

} //TouchLiteralImpl
