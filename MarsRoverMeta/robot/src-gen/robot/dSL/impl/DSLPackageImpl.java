/**
 * generated by Xtext 2.10.0
 */
package robot.dSL.impl;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EEnum;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

import org.eclipse.emf.ecore.impl.EPackageImpl;

import robot.dSL.ANDexpression;
import robot.dSL.ActionEnum;
import robot.dSL.Actions;
import robot.dSL.BackEnum;
import robot.dSL.Behavior;
import robot.dSL.BehaviorName;
import robot.dSL.ColorEnum;
import robot.dSL.ColorLiteral;
import robot.dSL.DSLFactory;
import robot.dSL.DSLPackage;
import robot.dSL.DepthLiteral;
import robot.dSL.DistanceLiteral;
import robot.dSL.EdgeEnum;
import robot.dSL.EdgeLiteral;
import robot.dSL.EndAfter;
import robot.dSL.EndCondition;
import robot.dSL.EndWhen;
import robot.dSL.Expression;
import robot.dSL.ExpressionBracket;
import robot.dSL.FBEnum;
import robot.dSL.LREnum;
import robot.dSL.LeftMovementAction;
import robot.dSL.LeftRotatePoint;
import robot.dSL.MAEnum;
import robot.dSL.MarsRoverExpedition;
import robot.dSL.MeasurementAction;
import robot.dSL.MiddleRotatePoint;
import robot.dSL.Mission;
import robot.dSL.MoveAction;
import robot.dSL.MovementAction;
import robot.dSL.ORexpression;
import robot.dSL.RightMovementAction;
import robot.dSL.RightRotatePoint;
import robot.dSL.RotateMovementAction;
import robot.dSL.RotatePoints;
import robot.dSL.Tenum;
import robot.dSL.TouchEnum;
import robot.dSL.TouchLiteral;
import robot.dSL.TrueLiteral;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Package</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class DSLPackageImpl extends EPackageImpl implements DSLPackage
{
  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass marsRoverExpeditionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass missionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass endConditionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass endAfterEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass endWhenEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass behaviorNameEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass behaviorEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass expressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass actionsEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass moveActionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass measurementActionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass leftMovementActionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass rightMovementActionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass rotateMovementActionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass rotatePointsEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass leftRotatePointEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass rightRotatePointEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass middleRotatePointEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass movementActionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass trueLiteralEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass expressionBracketEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass depthLiteralEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass touchLiteralEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass colorLiteralEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass distanceLiteralEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass edgeLiteralEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass anDexpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass oRexpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum maEnumEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum lrEnumEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum fbEnumEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum actionEnumEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum tenumEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum backEnumEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum edgeEnumEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum touchEnumEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum colorEnumEEnum = null;

  /**
   * Creates an instance of the model <b>Package</b>, registered with
   * {@link org.eclipse.emf.ecore.EPackage.Registry EPackage.Registry} by the package
   * package URI value.
   * <p>Note: the correct way to create the package is via the static
   * factory method {@link #init init()}, which also performs
   * initialization of the package, or returns the registered package,
   * if one already exists.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.eclipse.emf.ecore.EPackage.Registry
   * @see robot.dSL.DSLPackage#eNS_URI
   * @see #init()
   * @generated
   */
  private DSLPackageImpl()
  {
    super(eNS_URI, DSLFactory.eINSTANCE);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static boolean isInited = false;

  /**
   * Creates, registers, and initializes the <b>Package</b> for this model, and for any others upon which it depends.
   * 
   * <p>This method is used to initialize {@link DSLPackage#eINSTANCE} when that field is accessed.
   * Clients should not invoke it directly. Instead, they should simply access that field to obtain the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #eNS_URI
   * @see #createPackageContents()
   * @see #initializePackageContents()
   * @generated
   */
  public static DSLPackage init()
  {
    if (isInited) return (DSLPackage)EPackage.Registry.INSTANCE.getEPackage(DSLPackage.eNS_URI);

    // Obtain or create and register package
    DSLPackageImpl theDSLPackage = (DSLPackageImpl)(EPackage.Registry.INSTANCE.get(eNS_URI) instanceof DSLPackageImpl ? EPackage.Registry.INSTANCE.get(eNS_URI) : new DSLPackageImpl());

    isInited = true;

    // Create package meta-data objects
    theDSLPackage.createPackageContents();

    // Initialize created meta-data
    theDSLPackage.initializePackageContents();

    // Mark meta-data to indicate it can't be changed
    theDSLPackage.freeze();

  
    // Update the registry and return the package
    EPackage.Registry.INSTANCE.put(DSLPackage.eNS_URI, theDSLPackage);
    return theDSLPackage;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getMarsRoverExpedition()
  {
    return marsRoverExpeditionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getMarsRoverExpedition_Missionlist()
  {
    return (EReference)marsRoverExpeditionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getMarsRoverExpedition_Tasklist()
  {
    return (EReference)marsRoverExpeditionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getMission()
  {
    return missionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getMission_Name()
  {
    return (EAttribute)missionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getMission_Behaviorlist()
  {
    return (EReference)missionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getMission_Endcondition()
  {
    return (EReference)missionEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getEndCondition()
  {
    return endConditionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getEndCondition_Endwhenlist()
  {
    return (EReference)endConditionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getEndAfter()
  {
    return endAfterEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getEndAfter_Time()
  {
    return (EAttribute)endAfterEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getEndWhen()
  {
    return endWhenEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getEndWhen_Name()
  {
    return (EAttribute)endWhenEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getEndWhen_Times()
  {
    return (EAttribute)endWhenEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getBehaviorName()
  {
    return behaviorNameEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getBehaviorName_Name()
  {
    return (EAttribute)behaviorNameEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getBehavior()
  {
    return behaviorEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getBehavior_Name()
  {
    return (EAttribute)behaviorEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getBehavior_SensorExpression()
  {
    return (EReference)behaviorEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getBehavior_Actionlist()
  {
    return (EReference)behaviorEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getExpression()
  {
    return expressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getActions()
  {
    return actionsEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getMoveAction()
  {
    return moveActionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getMoveAction_Dir()
  {
    return (EAttribute)moveActionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getMeasurementAction()
  {
    return measurementActionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getMeasurementAction_Measure()
  {
    return (EAttribute)measurementActionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getLeftMovementAction()
  {
    return leftMovementActionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getLeftMovementAction_Leftmove()
  {
    return (EReference)leftMovementActionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getRightMovementAction()
  {
    return rightMovementActionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getRightMovementAction_Rightmove()
  {
    return (EReference)rightMovementActionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getRotateMovementAction()
  {
    return rotateMovementActionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getRotatePoints()
  {
    return rotatePointsEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getRotatePoints_Degrees()
  {
    return (EAttribute)rotatePointsEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getLeftRotatePoint()
  {
    return leftRotatePointEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getLeftRotatePoint_Leftdir()
  {
    return (EAttribute)leftRotatePointEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getRightRotatePoint()
  {
    return rightRotatePointEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getRightRotatePoint_Rightdir()
  {
    return (EAttribute)rightRotatePointEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getMiddleRotatePoint()
  {
    return middleRotatePointEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getMiddleRotatePoint_Middledir()
  {
    return (EAttribute)middleRotatePointEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getMovementAction()
  {
    return movementActionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getMovementAction_Actionenum()
  {
    return (EAttribute)movementActionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getTrueLiteral()
  {
    return trueLiteralEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getTrueLiteral_T()
  {
    return (EAttribute)trueLiteralEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getExpressionBracket()
  {
    return expressionBracketEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getExpressionBracket_Exp()
  {
    return (EReference)expressionBracketEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getDepthLiteral()
  {
    return depthLiteralEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getDepthLiteral_Back()
  {
    return (EAttribute)depthLiteralEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getTouchLiteral()
  {
    return touchLiteralEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getTouchLiteral_Touch()
  {
    return (EAttribute)touchLiteralEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getColorLiteral()
  {
    return colorLiteralEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getColorLiteral_Color()
  {
    return (EAttribute)colorLiteralEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getDistanceLiteral()
  {
    return distanceLiteralEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getDistanceLiteral_Distance()
  {
    return (EAttribute)distanceLiteralEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getEdgeLiteral()
  {
    return edgeLiteralEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getEdgeLiteral_Edge()
  {
    return (EAttribute)edgeLiteralEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getANDexpression()
  {
    return anDexpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getANDexpression_Left()
  {
    return (EReference)anDexpressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getANDexpression_Right()
  {
    return (EReference)anDexpressionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getORexpression()
  {
    return oRexpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getORexpression_Left()
  {
    return (EReference)oRexpressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getORexpression_Right()
  {
    return (EReference)oRexpressionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EEnum getMAEnum()
  {
    return maEnumEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EEnum getLREnum()
  {
    return lrEnumEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EEnum getFBEnum()
  {
    return fbEnumEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EEnum getActionEnum()
  {
    return actionEnumEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EEnum getTenum()
  {
    return tenumEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EEnum getBackEnum()
  {
    return backEnumEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EEnum getEdgeEnum()
  {
    return edgeEnumEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EEnum getTouchEnum()
  {
    return touchEnumEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EEnum getColorEnum()
  {
    return colorEnumEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public DSLFactory getDSLFactory()
  {
    return (DSLFactory)getEFactoryInstance();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isCreated = false;

  /**
   * Creates the meta-model objects for the package.  This method is
   * guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void createPackageContents()
  {
    if (isCreated) return;
    isCreated = true;

    // Create classes and their features
    marsRoverExpeditionEClass = createEClass(MARS_ROVER_EXPEDITION);
    createEReference(marsRoverExpeditionEClass, MARS_ROVER_EXPEDITION__MISSIONLIST);
    createEReference(marsRoverExpeditionEClass, MARS_ROVER_EXPEDITION__TASKLIST);

    missionEClass = createEClass(MISSION);
    createEAttribute(missionEClass, MISSION__NAME);
    createEReference(missionEClass, MISSION__BEHAVIORLIST);
    createEReference(missionEClass, MISSION__ENDCONDITION);

    endConditionEClass = createEClass(END_CONDITION);
    createEReference(endConditionEClass, END_CONDITION__ENDWHENLIST);

    endAfterEClass = createEClass(END_AFTER);
    createEAttribute(endAfterEClass, END_AFTER__TIME);

    endWhenEClass = createEClass(END_WHEN);
    createEAttribute(endWhenEClass, END_WHEN__NAME);
    createEAttribute(endWhenEClass, END_WHEN__TIMES);

    behaviorNameEClass = createEClass(BEHAVIOR_NAME);
    createEAttribute(behaviorNameEClass, BEHAVIOR_NAME__NAME);

    behaviorEClass = createEClass(BEHAVIOR);
    createEAttribute(behaviorEClass, BEHAVIOR__NAME);
    createEReference(behaviorEClass, BEHAVIOR__SENSOR_EXPRESSION);
    createEReference(behaviorEClass, BEHAVIOR__ACTIONLIST);

    expressionEClass = createEClass(EXPRESSION);

    actionsEClass = createEClass(ACTIONS);

    moveActionEClass = createEClass(MOVE_ACTION);
    createEAttribute(moveActionEClass, MOVE_ACTION__DIR);

    measurementActionEClass = createEClass(MEASUREMENT_ACTION);
    createEAttribute(measurementActionEClass, MEASUREMENT_ACTION__MEASURE);

    leftMovementActionEClass = createEClass(LEFT_MOVEMENT_ACTION);
    createEReference(leftMovementActionEClass, LEFT_MOVEMENT_ACTION__LEFTMOVE);

    rightMovementActionEClass = createEClass(RIGHT_MOVEMENT_ACTION);
    createEReference(rightMovementActionEClass, RIGHT_MOVEMENT_ACTION__RIGHTMOVE);

    rotateMovementActionEClass = createEClass(ROTATE_MOVEMENT_ACTION);

    rotatePointsEClass = createEClass(ROTATE_POINTS);
    createEAttribute(rotatePointsEClass, ROTATE_POINTS__DEGREES);

    leftRotatePointEClass = createEClass(LEFT_ROTATE_POINT);
    createEAttribute(leftRotatePointEClass, LEFT_ROTATE_POINT__LEFTDIR);

    rightRotatePointEClass = createEClass(RIGHT_ROTATE_POINT);
    createEAttribute(rightRotatePointEClass, RIGHT_ROTATE_POINT__RIGHTDIR);

    middleRotatePointEClass = createEClass(MIDDLE_ROTATE_POINT);
    createEAttribute(middleRotatePointEClass, MIDDLE_ROTATE_POINT__MIDDLEDIR);

    movementActionEClass = createEClass(MOVEMENT_ACTION);
    createEAttribute(movementActionEClass, MOVEMENT_ACTION__ACTIONENUM);

    trueLiteralEClass = createEClass(TRUE_LITERAL);
    createEAttribute(trueLiteralEClass, TRUE_LITERAL__T);

    expressionBracketEClass = createEClass(EXPRESSION_BRACKET);
    createEReference(expressionBracketEClass, EXPRESSION_BRACKET__EXP);

    depthLiteralEClass = createEClass(DEPTH_LITERAL);
    createEAttribute(depthLiteralEClass, DEPTH_LITERAL__BACK);

    touchLiteralEClass = createEClass(TOUCH_LITERAL);
    createEAttribute(touchLiteralEClass, TOUCH_LITERAL__TOUCH);

    colorLiteralEClass = createEClass(COLOR_LITERAL);
    createEAttribute(colorLiteralEClass, COLOR_LITERAL__COLOR);

    distanceLiteralEClass = createEClass(DISTANCE_LITERAL);
    createEAttribute(distanceLiteralEClass, DISTANCE_LITERAL__DISTANCE);

    edgeLiteralEClass = createEClass(EDGE_LITERAL);
    createEAttribute(edgeLiteralEClass, EDGE_LITERAL__EDGE);

    anDexpressionEClass = createEClass(AN_DEXPRESSION);
    createEReference(anDexpressionEClass, AN_DEXPRESSION__LEFT);
    createEReference(anDexpressionEClass, AN_DEXPRESSION__RIGHT);

    oRexpressionEClass = createEClass(OREXPRESSION);
    createEReference(oRexpressionEClass, OREXPRESSION__LEFT);
    createEReference(oRexpressionEClass, OREXPRESSION__RIGHT);

    // Create enums
    maEnumEEnum = createEEnum(MA_ENUM);
    lrEnumEEnum = createEEnum(LR_ENUM);
    fbEnumEEnum = createEEnum(FB_ENUM);
    actionEnumEEnum = createEEnum(ACTION_ENUM);
    tenumEEnum = createEEnum(TENUM);
    backEnumEEnum = createEEnum(BACK_ENUM);
    edgeEnumEEnum = createEEnum(EDGE_ENUM);
    touchEnumEEnum = createEEnum(TOUCH_ENUM);
    colorEnumEEnum = createEEnum(COLOR_ENUM);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isInitialized = false;

  /**
   * Complete the initialization of the package and its meta-model.  This
   * method is guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void initializePackageContents()
  {
    if (isInitialized) return;
    isInitialized = true;

    // Initialize package
    setName(eNAME);
    setNsPrefix(eNS_PREFIX);
    setNsURI(eNS_URI);

    // Create type parameters

    // Set bounds for type parameters

    // Add supertypes to classes
    endAfterEClass.getESuperTypes().add(this.getEndCondition());
    moveActionEClass.getESuperTypes().add(this.getActions());
    measurementActionEClass.getESuperTypes().add(this.getActions());
    leftMovementActionEClass.getESuperTypes().add(this.getActions());
    rightMovementActionEClass.getESuperTypes().add(this.getActions());
    rotateMovementActionEClass.getESuperTypes().add(this.getActions());
    rotatePointsEClass.getESuperTypes().add(this.getRotateMovementAction());
    leftRotatePointEClass.getESuperTypes().add(this.getRotatePoints());
    rightRotatePointEClass.getESuperTypes().add(this.getRotatePoints());
    middleRotatePointEClass.getESuperTypes().add(this.getRotatePoints());
    trueLiteralEClass.getESuperTypes().add(this.getExpression());
    expressionBracketEClass.getESuperTypes().add(this.getExpression());
    depthLiteralEClass.getESuperTypes().add(this.getExpression());
    touchLiteralEClass.getESuperTypes().add(this.getExpression());
    colorLiteralEClass.getESuperTypes().add(this.getExpression());
    distanceLiteralEClass.getESuperTypes().add(this.getExpression());
    edgeLiteralEClass.getESuperTypes().add(this.getExpression());
    anDexpressionEClass.getESuperTypes().add(this.getExpression());
    oRexpressionEClass.getESuperTypes().add(this.getExpression());

    // Initialize classes and features; add operations and parameters
    initEClass(marsRoverExpeditionEClass, MarsRoverExpedition.class, "MarsRoverExpedition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getMarsRoverExpedition_Missionlist(), this.getMission(), null, "missionlist", null, 0, -1, MarsRoverExpedition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getMarsRoverExpedition_Tasklist(), this.getBehavior(), null, "tasklist", null, 0, -1, MarsRoverExpedition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(missionEClass, Mission.class, "Mission", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getMission_Name(), ecorePackage.getEString(), "name", null, 0, 1, Mission.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getMission_Behaviorlist(), this.getBehaviorName(), null, "behaviorlist", null, 0, -1, Mission.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getMission_Endcondition(), this.getEndCondition(), null, "endcondition", null, 0, 1, Mission.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(endConditionEClass, EndCondition.class, "EndCondition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getEndCondition_Endwhenlist(), this.getEndWhen(), null, "endwhenlist", null, 0, -1, EndCondition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(endAfterEClass, EndAfter.class, "EndAfter", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getEndAfter_Time(), ecorePackage.getEInt(), "time", null, 0, 1, EndAfter.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(endWhenEClass, EndWhen.class, "EndWhen", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getEndWhen_Name(), ecorePackage.getEString(), "name", null, 0, 1, EndWhen.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getEndWhen_Times(), ecorePackage.getEInt(), "times", null, 0, 1, EndWhen.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(behaviorNameEClass, BehaviorName.class, "BehaviorName", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getBehaviorName_Name(), ecorePackage.getEString(), "name", null, 0, 1, BehaviorName.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(behaviorEClass, Behavior.class, "Behavior", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getBehavior_Name(), ecorePackage.getEString(), "name", null, 0, 1, Behavior.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getBehavior_SensorExpression(), this.getExpression(), null, "sensorExpression", null, 0, 1, Behavior.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getBehavior_Actionlist(), this.getActions(), null, "actionlist", null, 0, -1, Behavior.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(expressionEClass, Expression.class, "Expression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(actionsEClass, Actions.class, "Actions", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(moveActionEClass, MoveAction.class, "MoveAction", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getMoveAction_Dir(), this.getFBEnum(), "dir", null, 0, 1, MoveAction.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(measurementActionEClass, MeasurementAction.class, "MeasurementAction", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getMeasurementAction_Measure(), this.getMAEnum(), "measure", null, 0, 1, MeasurementAction.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(leftMovementActionEClass, LeftMovementAction.class, "LeftMovementAction", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getLeftMovementAction_Leftmove(), this.getMovementAction(), null, "leftmove", null, 0, 1, LeftMovementAction.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(rightMovementActionEClass, RightMovementAction.class, "RightMovementAction", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getRightMovementAction_Rightmove(), this.getMovementAction(), null, "rightmove", null, 0, 1, RightMovementAction.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(rotateMovementActionEClass, RotateMovementAction.class, "RotateMovementAction", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(rotatePointsEClass, RotatePoints.class, "RotatePoints", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getRotatePoints_Degrees(), ecorePackage.getEInt(), "degrees", null, 0, 1, RotatePoints.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(leftRotatePointEClass, LeftRotatePoint.class, "LeftRotatePoint", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getLeftRotatePoint_Leftdir(), this.getFBEnum(), "leftdir", null, 0, 1, LeftRotatePoint.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(rightRotatePointEClass, RightRotatePoint.class, "RightRotatePoint", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getRightRotatePoint_Rightdir(), this.getFBEnum(), "rightdir", null, 0, 1, RightRotatePoint.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(middleRotatePointEClass, MiddleRotatePoint.class, "MiddleRotatePoint", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getMiddleRotatePoint_Middledir(), this.getLREnum(), "middledir", null, 0, 1, MiddleRotatePoint.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(movementActionEClass, MovementAction.class, "MovementAction", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getMovementAction_Actionenum(), this.getActionEnum(), "actionenum", null, 0, 1, MovementAction.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(trueLiteralEClass, TrueLiteral.class, "TrueLiteral", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getTrueLiteral_T(), this.getTenum(), "t", null, 0, 1, TrueLiteral.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(expressionBracketEClass, ExpressionBracket.class, "ExpressionBracket", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getExpressionBracket_Exp(), this.getExpression(), null, "exp", null, 0, 1, ExpressionBracket.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(depthLiteralEClass, DepthLiteral.class, "DepthLiteral", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getDepthLiteral_Back(), this.getBackEnum(), "back", null, 0, 1, DepthLiteral.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(touchLiteralEClass, TouchLiteral.class, "TouchLiteral", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getTouchLiteral_Touch(), this.getTouchEnum(), "touch", null, 0, 1, TouchLiteral.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(colorLiteralEClass, ColorLiteral.class, "ColorLiteral", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getColorLiteral_Color(), this.getColorEnum(), "color", null, 0, 1, ColorLiteral.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(distanceLiteralEClass, DistanceLiteral.class, "DistanceLiteral", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getDistanceLiteral_Distance(), ecorePackage.getEInt(), "distance", null, 0, 1, DistanceLiteral.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(edgeLiteralEClass, EdgeLiteral.class, "EdgeLiteral", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getEdgeLiteral_Edge(), this.getEdgeEnum(), "edge", null, 0, 1, EdgeLiteral.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(anDexpressionEClass, ANDexpression.class, "ANDexpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getANDexpression_Left(), this.getExpression(), null, "left", null, 0, 1, ANDexpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getANDexpression_Right(), this.getExpression(), null, "right", null, 0, 1, ANDexpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(oRexpressionEClass, ORexpression.class, "ORexpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getORexpression_Left(), this.getExpression(), null, "left", null, 0, 1, ORexpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getORexpression_Right(), this.getExpression(), null, "right", null, 0, 1, ORexpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    // Initialize enums and add enum literals
    initEEnum(maEnumEEnum, MAEnum.class, "MAEnum");
    addEEnumLiteral(maEnumEEnum, MAEnum.MEASURE);

    initEEnum(lrEnumEEnum, LREnum.class, "LREnum");
    addEEnumLiteral(lrEnumEEnum, LREnum.LEFT);
    addEEnumLiteral(lrEnumEEnum, LREnum.RIGHT);

    initEEnum(fbEnumEEnum, FBEnum.class, "FBEnum");
    addEEnumLiteral(fbEnumEEnum, FBEnum.FORWARD);
    addEEnumLiteral(fbEnumEEnum, FBEnum.BACKWARD);

    initEEnum(actionEnumEEnum, ActionEnum.class, "ActionEnum");
    addEEnumLiteral(actionEnumEEnum, ActionEnum.FORWARD);
    addEEnumLiteral(actionEnumEEnum, ActionEnum.BACKWARD);
    addEEnumLiteral(actionEnumEEnum, ActionEnum.STOP);

    initEEnum(tenumEEnum, Tenum.class, "Tenum");
    addEEnumLiteral(tenumEEnum, Tenum.TRUE);

    initEEnum(backEnumEEnum, BackEnum.class, "BackEnum");
    addEEnumLiteral(backEnumEEnum, BackEnum.BACK);

    initEEnum(edgeEnumEEnum, EdgeEnum.class, "EdgeEnum");
    addEEnumLiteral(edgeEnumEEnum, EdgeEnum.FRONTLEFT);
    addEEnumLiteral(edgeEnumEEnum, EdgeEnum.FRONTRIGHT);
    addEEnumLiteral(edgeEnumEEnum, EdgeEnum.BACK);

    initEEnum(touchEnumEEnum, TouchEnum.class, "TouchEnum");
    addEEnumLiteral(touchEnumEEnum, TouchEnum.LEFT);
    addEEnumLiteral(touchEnumEEnum, TouchEnum.RIGHT);

    initEEnum(colorEnumEEnum, ColorEnum.class, "ColorEnum");
    addEEnumLiteral(colorEnumEEnum, ColorEnum.NONE);
    addEEnumLiteral(colorEnumEEnum, ColorEnum.BLACK);
    addEEnumLiteral(colorEnumEEnum, ColorEnum.BLUE);
    addEEnumLiteral(colorEnumEEnum, ColorEnum.GREEN);
    addEEnumLiteral(colorEnumEEnum, ColorEnum.YELLOW);
    addEEnumLiteral(colorEnumEEnum, ColorEnum.RED);
    addEEnumLiteral(colorEnumEEnum, ColorEnum.WHITE);
    addEEnumLiteral(colorEnumEEnum, ColorEnum.BROWN);

    // Create resource
    createResource(eNS_URI);
  }

} //DSLPackageImpl
