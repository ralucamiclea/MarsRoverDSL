package robot.generator;

import org.eclipse.xtend2.lib.StringConcatenation;
import robot.dSL.MarsRoverExpedition;

@SuppressWarnings("all")
public class GetMessageGenerator {
  public static CharSequence toText(final MarsRoverExpedition expedition) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("import java.io.IOException;");
    _builder.newLine();
    _builder.append("import lejos.hardware.lcd.LCD;");
    _builder.newLine();
    _builder.newLine();
    _builder.newLine();
    _builder.append("public class GetMessage extends Thread {");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("Model m;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("private byte b;");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public GetMessage(Model m, Goals g){");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("this.m=m;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public void run(){");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("boolean bll = false;");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("while(!m.end){");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("try{");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("bll = ((b=m.reader.readByte())!=\'\\n\');");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("}catch (IOException ex){");
    _builder.newLine();
    _builder.append("\t \t\t\t");
    _builder.append("LCD.drawString(\"error:\", 0, 3);");
    _builder.newLine();
    _builder.append("\t \t\t\t");
    _builder.append("LCD.drawString(ex.getMessage(),0,4);");
    _builder.newLine();
    _builder.append("\t \t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("if(bll){");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("if(b==\'l\')");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.append("m.touchFrontLeft=true;");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("if(b==\'r\')");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.append("m.touchFronRight=true;");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("if(b==\'g\')");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.append("m.g=true;");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("if(b==\'d\'){");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.append("try {");
    _builder.newLine();
    _builder.append("\t\t\t\t\t\t");
    _builder.append("m.d = (int) m.reader.readFloat();");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.append("} catch (IOException ex) {");
    _builder.newLine();
    _builder.append("\t\t\t\t\t\t");
    _builder.append("LCD.drawString(\"error:\", 0, 3);");
    _builder.newLine();
    _builder.append("\t\t\t \t\t\t");
    _builder.append("LCD.drawString(ex.getMessage(),0,4);");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.newLine();
    _builder.append("}");
    _builder.newLine();
    return _builder;
  }
}
