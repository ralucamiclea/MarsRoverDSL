/*
 * generated by Xtext 2.10.0
 */
grammar InternalDSL;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package robot.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package robot.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import robot.services.DSLGrammarAccess;

}
@parser::members {
	private DSLGrammarAccess grammarAccess;

	public void setGrammarAccess(DSLGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleMarsRoverExpedition
entryRuleMarsRoverExpedition
:
{ before(grammarAccess.getMarsRoverExpeditionRule()); }
	 ruleMarsRoverExpedition
{ after(grammarAccess.getMarsRoverExpeditionRule()); } 
	 EOF 
;

// Rule MarsRoverExpedition
ruleMarsRoverExpedition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMarsRoverExpeditionAccess().getGroup()); }
		(rule__MarsRoverExpedition__Group__0)
		{ after(grammarAccess.getMarsRoverExpeditionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMission
entryRuleMission
:
{ before(grammarAccess.getMissionRule()); }
	 ruleMission
{ after(grammarAccess.getMissionRule()); } 
	 EOF 
;

// Rule Mission
ruleMission 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMissionAccess().getGroup()); }
		(rule__Mission__Group__0)
		{ after(grammarAccess.getMissionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEndCondition
entryRuleEndCondition
:
{ before(grammarAccess.getEndConditionRule()); }
	 ruleEndCondition
{ after(grammarAccess.getEndConditionRule()); } 
	 EOF 
;

// Rule EndCondition
ruleEndCondition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEndConditionAccess().getAlternatives()); }
		(rule__EndCondition__Alternatives)
		{ after(grammarAccess.getEndConditionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEndAfter
entryRuleEndAfter
:
{ before(grammarAccess.getEndAfterRule()); }
	 ruleEndAfter
{ after(grammarAccess.getEndAfterRule()); } 
	 EOF 
;

// Rule EndAfter
ruleEndAfter 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEndAfterAccess().getGroup()); }
		(rule__EndAfter__Group__0)
		{ after(grammarAccess.getEndAfterAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEndWhen
entryRuleEndWhen
:
{ before(grammarAccess.getEndWhenRule()); }
	 ruleEndWhen
{ after(grammarAccess.getEndWhenRule()); } 
	 EOF 
;

// Rule EndWhen
ruleEndWhen 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEndWhenAccess().getGroup()); }
		(rule__EndWhen__Group__0)
		{ after(grammarAccess.getEndWhenAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBehaviorName
entryRuleBehaviorName
:
{ before(grammarAccess.getBehaviorNameRule()); }
	 ruleBehaviorName
{ after(grammarAccess.getBehaviorNameRule()); } 
	 EOF 
;

// Rule BehaviorName
ruleBehaviorName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBehaviorNameAccess().getGroup()); }
		(rule__BehaviorName__Group__0)
		{ after(grammarAccess.getBehaviorNameAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBehavior
entryRuleBehavior
:
{ before(grammarAccess.getBehaviorRule()); }
	 ruleBehavior
{ after(grammarAccess.getBehaviorRule()); } 
	 EOF 
;

// Rule Behavior
ruleBehavior 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBehaviorAccess().getGroup()); }
		(rule__Behavior__Group__0)
		{ after(grammarAccess.getBehaviorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpression
entryRuleExpression
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionAccess().getExpression1ParserRuleCall()); }
		ruleExpression1
		{ after(grammarAccess.getExpressionAccess().getExpression1ParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleActions
entryRuleActions
:
{ before(grammarAccess.getActionsRule()); }
	 ruleActions
{ after(grammarAccess.getActionsRule()); } 
	 EOF 
;

// Rule Actions
ruleActions 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getActionsAccess().getAlternatives()); }
		(rule__Actions__Alternatives)
		{ after(grammarAccess.getActionsAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLeftMovementAction
entryRuleLeftMovementAction
:
{ before(grammarAccess.getLeftMovementActionRule()); }
	 ruleLeftMovementAction
{ after(grammarAccess.getLeftMovementActionRule()); } 
	 EOF 
;

// Rule LeftMovementAction
ruleLeftMovementAction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLeftMovementActionAccess().getGroup()); }
		(rule__LeftMovementAction__Group__0)
		{ after(grammarAccess.getLeftMovementActionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRightMovementAction
entryRuleRightMovementAction
:
{ before(grammarAccess.getRightMovementActionRule()); }
	 ruleRightMovementAction
{ after(grammarAccess.getRightMovementActionRule()); } 
	 EOF 
;

// Rule RightMovementAction
ruleRightMovementAction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRightMovementActionAccess().getGroup()); }
		(rule__RightMovementAction__Group__0)
		{ after(grammarAccess.getRightMovementActionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRotateMovementAction
entryRuleRotateMovementAction
:
{ before(grammarAccess.getRotateMovementActionRule()); }
	 ruleRotateMovementAction
{ after(grammarAccess.getRotateMovementActionRule()); } 
	 EOF 
;

// Rule RotateMovementAction
ruleRotateMovementAction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRotateMovementActionAccess().getGroup()); }
		(rule__RotateMovementAction__Group__0)
		{ after(grammarAccess.getRotateMovementActionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRotatePoints
entryRuleRotatePoints
:
{ before(grammarAccess.getRotatePointsRule()); }
	 ruleRotatePoints
{ after(grammarAccess.getRotatePointsRule()); } 
	 EOF 
;

// Rule RotatePoints
ruleRotatePoints 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRotatePointsAccess().getAlternatives()); }
		(rule__RotatePoints__Alternatives)
		{ after(grammarAccess.getRotatePointsAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLeftRotatePoint
entryRuleLeftRotatePoint
:
{ before(grammarAccess.getLeftRotatePointRule()); }
	 ruleLeftRotatePoint
{ after(grammarAccess.getLeftRotatePointRule()); } 
	 EOF 
;

// Rule LeftRotatePoint
ruleLeftRotatePoint 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLeftRotatePointAccess().getGroup()); }
		(rule__LeftRotatePoint__Group__0)
		{ after(grammarAccess.getLeftRotatePointAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRightRotatePoint
entryRuleRightRotatePoint
:
{ before(grammarAccess.getRightRotatePointRule()); }
	 ruleRightRotatePoint
{ after(grammarAccess.getRightRotatePointRule()); } 
	 EOF 
;

// Rule RightRotatePoint
ruleRightRotatePoint 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRightRotatePointAccess().getGroup()); }
		(rule__RightRotatePoint__Group__0)
		{ after(grammarAccess.getRightRotatePointAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMiddleRotatePoint
entryRuleMiddleRotatePoint
:
{ before(grammarAccess.getMiddleRotatePointRule()); }
	 ruleMiddleRotatePoint
{ after(grammarAccess.getMiddleRotatePointRule()); } 
	 EOF 
;

// Rule MiddleRotatePoint
ruleMiddleRotatePoint 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMiddleRotatePointAccess().getGroup()); }
		(rule__MiddleRotatePoint__Group__0)
		{ after(grammarAccess.getMiddleRotatePointAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMovementAction
entryRuleMovementAction
:
{ before(grammarAccess.getMovementActionRule()); }
	 ruleMovementAction
{ after(grammarAccess.getMovementActionRule()); } 
	 EOF 
;

// Rule MovementAction
ruleMovementAction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMovementActionAccess().getActionenumAssignment()); }
		(rule__MovementAction__ActionenumAssignment)
		{ after(grammarAccess.getMovementActionAccess().getActionenumAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpression1
entryRuleExpression1
:
{ before(grammarAccess.getExpression1Rule()); }
	 ruleExpression1
{ after(grammarAccess.getExpression1Rule()); } 
	 EOF 
;

// Rule Expression1
ruleExpression1 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpression1Access().getGroup()); }
		(rule__Expression1__Group__0)
		{ after(grammarAccess.getExpression1Access().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpression2
entryRuleExpression2
:
{ before(grammarAccess.getExpression2Rule()); }
	 ruleExpression2
{ after(grammarAccess.getExpression2Rule()); } 
	 EOF 
;

// Rule Expression2
ruleExpression2 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpression2Access().getGroup()); }
		(rule__Expression2__Group__0)
		{ after(grammarAccess.getExpression2Access().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpression3
entryRuleExpression3
:
{ before(grammarAccess.getExpression3Rule()); }
	 ruleExpression3
{ after(grammarAccess.getExpression3Rule()); } 
	 EOF 
;

// Rule Expression3
ruleExpression3 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpression3Access().getAlternatives()); }
		(rule__Expression3__Alternatives)
		{ after(grammarAccess.getExpression3Access().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpressionBracket
entryRuleExpressionBracket
:
{ before(grammarAccess.getExpressionBracketRule()); }
	 ruleExpressionBracket
{ after(grammarAccess.getExpressionBracketRule()); } 
	 EOF 
;

// Rule ExpressionBracket
ruleExpressionBracket 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionBracketAccess().getGroup()); }
		(rule__ExpressionBracket__Group__0)
		{ after(grammarAccess.getExpressionBracketAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTouchLiteral
entryRuleTouchLiteral
:
{ before(grammarAccess.getTouchLiteralRule()); }
	 ruleTouchLiteral
{ after(grammarAccess.getTouchLiteralRule()); } 
	 EOF 
;

// Rule TouchLiteral
ruleTouchLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTouchLiteralAccess().getGroup()); }
		(rule__TouchLiteral__Group__0)
		{ after(grammarAccess.getTouchLiteralAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleColorLiteral
entryRuleColorLiteral
:
{ before(grammarAccess.getColorLiteralRule()); }
	 ruleColorLiteral
{ after(grammarAccess.getColorLiteralRule()); } 
	 EOF 
;

// Rule ColorLiteral
ruleColorLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getColorLiteralAccess().getGroup()); }
		(rule__ColorLiteral__Group__0)
		{ after(grammarAccess.getColorLiteralAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDistanceLiteral
entryRuleDistanceLiteral
:
{ before(grammarAccess.getDistanceLiteralRule()); }
	 ruleDistanceLiteral
{ after(grammarAccess.getDistanceLiteralRule()); } 
	 EOF 
;

// Rule DistanceLiteral
ruleDistanceLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDistanceLiteralAccess().getGroup()); }
		(rule__DistanceLiteral__Group__0)
		{ after(grammarAccess.getDistanceLiteralAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEdgeLiteral
entryRuleEdgeLiteral
:
{ before(grammarAccess.getEdgeLiteralRule()); }
	 ruleEdgeLiteral
{ after(grammarAccess.getEdgeLiteralRule()); } 
	 EOF 
;

// Rule EdgeLiteral
ruleEdgeLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEdgeLiteralAccess().getGroup()); }
		(rule__EdgeLiteral__Group__0)
		{ after(grammarAccess.getEdgeLiteralAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule LREnum
ruleLREnum
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLREnumAccess().getAlternatives()); }
		(rule__LREnum__Alternatives)
		{ after(grammarAccess.getLREnumAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule FBEnum
ruleFBEnum
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFBEnumAccess().getAlternatives()); }
		(rule__FBEnum__Alternatives)
		{ after(grammarAccess.getFBEnumAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule ActionEnum
ruleActionEnum
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionEnumAccess().getAlternatives()); }
		(rule__ActionEnum__Alternatives)
		{ after(grammarAccess.getActionEnumAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule EdgeEnum
ruleEdgeEnum
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEdgeEnumAccess().getAlternatives()); }
		(rule__EdgeEnum__Alternatives)
		{ after(grammarAccess.getEdgeEnumAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule TouchEnum
ruleTouchEnum
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTouchEnumAccess().getAlternatives()); }
		(rule__TouchEnum__Alternatives)
		{ after(grammarAccess.getTouchEnumAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule ColorEnum
ruleColorEnum
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColorEnumAccess().getAlternatives()); }
		(rule__ColorEnum__Alternatives)
		{ after(grammarAccess.getColorEnumAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EndCondition__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEndConditionAccess().getEndAfterParserRuleCall_0()); }
		ruleEndAfter
		{ after(grammarAccess.getEndConditionAccess().getEndAfterParserRuleCall_0()); }
	)
	|
	(
		(
			{ before(grammarAccess.getEndConditionAccess().getEndwhenlistAssignment_1()); }
			(rule__EndCondition__EndwhenlistAssignment_1)
			{ after(grammarAccess.getEndConditionAccess().getEndwhenlistAssignment_1()); }
		)
		(
			{ before(grammarAccess.getEndConditionAccess().getEndwhenlistAssignment_1()); }
			(rule__EndCondition__EndwhenlistAssignment_1)*
			{ after(grammarAccess.getEndConditionAccess().getEndwhenlistAssignment_1()); }
		)
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actions__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionsAccess().getLeftMovementActionParserRuleCall_0()); }
		ruleLeftMovementAction
		{ after(grammarAccess.getActionsAccess().getLeftMovementActionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getActionsAccess().getRightMovementActionParserRuleCall_1()); }
		ruleRightMovementAction
		{ after(grammarAccess.getActionsAccess().getRightMovementActionParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getActionsAccess().getRotateMovementActionParserRuleCall_2()); }
		ruleRotateMovementAction
		{ after(grammarAccess.getActionsAccess().getRotateMovementActionParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RotatePoints__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRotatePointsAccess().getLeftRotatePointParserRuleCall_0()); }
		ruleLeftRotatePoint
		{ after(grammarAccess.getRotatePointsAccess().getLeftRotatePointParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getRotatePointsAccess().getRightRotatePointParserRuleCall_1()); }
		ruleRightRotatePoint
		{ after(grammarAccess.getRotatePointsAccess().getRightRotatePointParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getRotatePointsAccess().getMiddleRotatePointParserRuleCall_2()); }
		ruleMiddleRotatePoint
		{ after(grammarAccess.getRotatePointsAccess().getMiddleRotatePointParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression3__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpression3Access().getExpressionBracketParserRuleCall_0()); }
		ruleExpressionBracket
		{ after(grammarAccess.getExpression3Access().getExpressionBracketParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getExpression3Access().getTouchLiteralParserRuleCall_1()); }
		ruleTouchLiteral
		{ after(grammarAccess.getExpression3Access().getTouchLiteralParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getExpression3Access().getColorLiteralParserRuleCall_2()); }
		ruleColorLiteral
		{ after(grammarAccess.getExpression3Access().getColorLiteralParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getExpression3Access().getDistanceLiteralParserRuleCall_3()); }
		ruleDistanceLiteral
		{ after(grammarAccess.getExpression3Access().getDistanceLiteralParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getExpression3Access().getEdgeLiteralParserRuleCall_4()); }
		ruleEdgeLiteral
		{ after(grammarAccess.getExpression3Access().getEdgeLiteralParserRuleCall_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LREnum__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLREnumAccess().getLEFTEnumLiteralDeclaration_0()); }
		('left')
		{ after(grammarAccess.getLREnumAccess().getLEFTEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getLREnumAccess().getRIGHTEnumLiteralDeclaration_1()); }
		('right')
		{ after(grammarAccess.getLREnumAccess().getRIGHTEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FBEnum__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFBEnumAccess().getFORWARDEnumLiteralDeclaration_0()); }
		('forward')
		{ after(grammarAccess.getFBEnumAccess().getFORWARDEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getFBEnumAccess().getBACKWARDEnumLiteralDeclaration_1()); }
		('backward')
		{ after(grammarAccess.getFBEnumAccess().getBACKWARDEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionEnum__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionEnumAccess().getFORWARDEnumLiteralDeclaration_0()); }
		('forward')
		{ after(grammarAccess.getActionEnumAccess().getFORWARDEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getActionEnumAccess().getBACKWARDEnumLiteralDeclaration_1()); }
		('backward')
		{ after(grammarAccess.getActionEnumAccess().getBACKWARDEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getActionEnumAccess().getSTOPEnumLiteralDeclaration_2()); }
		('stop')
		{ after(grammarAccess.getActionEnumAccess().getSTOPEnumLiteralDeclaration_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EdgeEnum__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEdgeEnumAccess().getFRONTLEFTEnumLiteralDeclaration_0()); }
		('frontLeft')
		{ after(grammarAccess.getEdgeEnumAccess().getFRONTLEFTEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getEdgeEnumAccess().getFRONTRIGHTEnumLiteralDeclaration_1()); }
		('frontRight')
		{ after(grammarAccess.getEdgeEnumAccess().getFRONTRIGHTEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getEdgeEnumAccess().getBACKEnumLiteralDeclaration_2()); }
		('back')
		{ after(grammarAccess.getEdgeEnumAccess().getBACKEnumLiteralDeclaration_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TouchEnum__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTouchEnumAccess().getLEFTEnumLiteralDeclaration_0()); }
		('touchFrontLeft')
		{ after(grammarAccess.getTouchEnumAccess().getLEFTEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getTouchEnumAccess().getRIGHTEnumLiteralDeclaration_1()); }
		('touchFrontRight')
		{ after(grammarAccess.getTouchEnumAccess().getRIGHTEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColorEnum__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColorEnumAccess().getNONEEnumLiteralDeclaration_0()); }
		('NONE')
		{ after(grammarAccess.getColorEnumAccess().getNONEEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getColorEnumAccess().getBLACKEnumLiteralDeclaration_1()); }
		('BLACK')
		{ after(grammarAccess.getColorEnumAccess().getBLACKEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getColorEnumAccess().getBLUEEnumLiteralDeclaration_2()); }
		('BLUE')
		{ after(grammarAccess.getColorEnumAccess().getBLUEEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getColorEnumAccess().getGREENEnumLiteralDeclaration_3()); }
		('GREEN')
		{ after(grammarAccess.getColorEnumAccess().getGREENEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getColorEnumAccess().getYELLOWEnumLiteralDeclaration_4()); }
		('YELLOW')
		{ after(grammarAccess.getColorEnumAccess().getYELLOWEnumLiteralDeclaration_4()); }
	)
	|
	(
		{ before(grammarAccess.getColorEnumAccess().getREDEnumLiteralDeclaration_5()); }
		('RED')
		{ after(grammarAccess.getColorEnumAccess().getREDEnumLiteralDeclaration_5()); }
	)
	|
	(
		{ before(grammarAccess.getColorEnumAccess().getWHITEEnumLiteralDeclaration_6()); }
		('WHITE')
		{ after(grammarAccess.getColorEnumAccess().getWHITEEnumLiteralDeclaration_6()); }
	)
	|
	(
		{ before(grammarAccess.getColorEnumAccess().getBROWNEnumLiteralDeclaration_7()); }
		('BROWN')
		{ after(grammarAccess.getColorEnumAccess().getBROWNEnumLiteralDeclaration_7()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MarsRoverExpedition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MarsRoverExpedition__Group__0__Impl
	rule__MarsRoverExpedition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MarsRoverExpedition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMarsRoverExpeditionAccess().getExpeditionSTARTKeyword_0()); }
	'ExpeditionSTART'
	{ after(grammarAccess.getMarsRoverExpeditionAccess().getExpeditionSTARTKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MarsRoverExpedition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MarsRoverExpedition__Group__1__Impl
	rule__MarsRoverExpedition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MarsRoverExpedition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getMarsRoverExpeditionAccess().getMissionlistAssignment_1()); }
		(rule__MarsRoverExpedition__MissionlistAssignment_1)
		{ after(grammarAccess.getMarsRoverExpeditionAccess().getMissionlistAssignment_1()); }
	)
	(
		{ before(grammarAccess.getMarsRoverExpeditionAccess().getMissionlistAssignment_1()); }
		(rule__MarsRoverExpedition__MissionlistAssignment_1)*
		{ after(grammarAccess.getMarsRoverExpeditionAccess().getMissionlistAssignment_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MarsRoverExpedition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MarsRoverExpedition__Group__2__Impl
	rule__MarsRoverExpedition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MarsRoverExpedition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMarsRoverExpeditionAccess().getExpeditionSTOPKeyword_2()); }
	'ExpeditionSTOP'
	{ after(grammarAccess.getMarsRoverExpeditionAccess().getExpeditionSTOPKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MarsRoverExpedition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MarsRoverExpedition__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MarsRoverExpedition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getMarsRoverExpeditionAccess().getTasklistAssignment_3()); }
		(rule__MarsRoverExpedition__TasklistAssignment_3)
		{ after(grammarAccess.getMarsRoverExpeditionAccess().getTasklistAssignment_3()); }
	)
	(
		{ before(grammarAccess.getMarsRoverExpeditionAccess().getTasklistAssignment_3()); }
		(rule__MarsRoverExpedition__TasklistAssignment_3)*
		{ after(grammarAccess.getMarsRoverExpeditionAccess().getTasklistAssignment_3()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Mission__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mission__Group__0__Impl
	rule__Mission__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMissionAccess().getMissionKeyword_0()); }
	'Mission'
	{ after(grammarAccess.getMissionAccess().getMissionKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mission__Group__1__Impl
	rule__Mission__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMissionAccess().getNameAssignment_1()); }
	(rule__Mission__NameAssignment_1)
	{ after(grammarAccess.getMissionAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mission__Group__2__Impl
	rule__Mission__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getMissionAccess().getBehaviorlistAssignment_2()); }
		(rule__Mission__BehaviorlistAssignment_2)
		{ after(grammarAccess.getMissionAccess().getBehaviorlistAssignment_2()); }
	)
	(
		{ before(grammarAccess.getMissionAccess().getBehaviorlistAssignment_2()); }
		(rule__Mission__BehaviorlistAssignment_2)*
		{ after(grammarAccess.getMissionAccess().getBehaviorlistAssignment_2()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mission__Group__3__Impl
	rule__Mission__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMissionAccess().getENDMissionKeyword_3()); }
	'ENDMission'
	{ after(grammarAccess.getMissionAccess().getENDMissionKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mission__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMissionAccess().getEndconditionAssignment_4()); }
	(rule__Mission__EndconditionAssignment_4)
	{ after(grammarAccess.getMissionAccess().getEndconditionAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EndAfter__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EndAfter__Group__0__Impl
	rule__EndAfter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EndAfter__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEndAfterAccess().getAfterKeyword_0()); }
	'after'
	{ after(grammarAccess.getEndAfterAccess().getAfterKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EndAfter__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EndAfter__Group__1__Impl
	rule__EndAfter__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EndAfter__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEndAfterAccess().getTimeAssignment_1()); }
	(rule__EndAfter__TimeAssignment_1)
	{ after(grammarAccess.getEndAfterAccess().getTimeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EndAfter__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EndAfter__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EndAfter__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEndAfterAccess().getMinKeyword_2()); }
	'min'
	{ after(grammarAccess.getEndAfterAccess().getMinKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EndWhen__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EndWhen__Group__0__Impl
	rule__EndWhen__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EndWhen__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEndWhenAccess().getIfKeyword_0()); }
	'If'
	{ after(grammarAccess.getEndWhenAccess().getIfKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EndWhen__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EndWhen__Group__1__Impl
	rule__EndWhen__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EndWhen__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEndWhenAccess().getTaskKeyword_1()); }
	'Task'
	{ after(grammarAccess.getEndWhenAccess().getTaskKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EndWhen__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EndWhen__Group__2__Impl
	rule__EndWhen__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EndWhen__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEndWhenAccess().getNameAssignment_2()); }
	(rule__EndWhen__NameAssignment_2)
	{ after(grammarAccess.getEndWhenAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EndWhen__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EndWhen__Group__3__Impl
	rule__EndWhen__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__EndWhen__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEndWhenAccess().getExecutedKeyword_3()); }
	'executed'
	{ after(grammarAccess.getEndWhenAccess().getExecutedKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EndWhen__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EndWhen__Group__4__Impl
	rule__EndWhen__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__EndWhen__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEndWhenAccess().getTimesAssignment_4()); }
	(rule__EndWhen__TimesAssignment_4)
	{ after(grammarAccess.getEndWhenAccess().getTimesAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EndWhen__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EndWhen__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EndWhen__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEndWhenAccess().getTimesKeyword_5()); }
	'times'
	{ after(grammarAccess.getEndWhenAccess().getTimesKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BehaviorName__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BehaviorName__Group__0__Impl
	rule__BehaviorName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorName__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBehaviorNameAccess().getTaskKeyword_0()); }
	'Task'
	{ after(grammarAccess.getBehaviorNameAccess().getTaskKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorName__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BehaviorName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorName__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBehaviorNameAccess().getNameAssignment_1()); }
	(rule__BehaviorName__NameAssignment_1)
	{ after(grammarAccess.getBehaviorNameAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Behavior__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Behavior__Group__0__Impl
	rule__Behavior__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Behavior__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBehaviorAccess().getTaskKeyword_0()); }
	'Task'
	{ after(grammarAccess.getBehaviorAccess().getTaskKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Behavior__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Behavior__Group__1__Impl
	rule__Behavior__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Behavior__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBehaviorAccess().getNameAssignment_1()); }
	(rule__Behavior__NameAssignment_1)
	{ after(grammarAccess.getBehaviorAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Behavior__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Behavior__Group__2__Impl
	rule__Behavior__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Behavior__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBehaviorAccess().getIFKeyword_2()); }
	'IF'
	{ after(grammarAccess.getBehaviorAccess().getIFKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Behavior__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Behavior__Group__3__Impl
	rule__Behavior__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Behavior__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBehaviorAccess().getSensorExpressionAssignment_3()); }
	(rule__Behavior__SensorExpressionAssignment_3)
	{ after(grammarAccess.getBehaviorAccess().getSensorExpressionAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Behavior__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Behavior__Group__4__Impl
	rule__Behavior__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Behavior__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBehaviorAccess().getTHENKeyword_4()); }
	'THEN'
	{ after(grammarAccess.getBehaviorAccess().getTHENKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Behavior__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Behavior__Group__5__Impl
	rule__Behavior__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Behavior__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getBehaviorAccess().getActionlistAssignment_5()); }
		(rule__Behavior__ActionlistAssignment_5)
		{ after(grammarAccess.getBehaviorAccess().getActionlistAssignment_5()); }
	)
	(
		{ before(grammarAccess.getBehaviorAccess().getActionlistAssignment_5()); }
		(rule__Behavior__ActionlistAssignment_5)*
		{ after(grammarAccess.getBehaviorAccess().getActionlistAssignment_5()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Behavior__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Behavior__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Behavior__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBehaviorAccess().getENDtaskKeyword_6()); }
	'ENDtask'
	{ after(grammarAccess.getBehaviorAccess().getENDtaskKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LeftMovementAction__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LeftMovementAction__Group__0__Impl
	rule__LeftMovementAction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftMovementAction__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLeftMovementActionAccess().getLeftMotorKeyword_0()); }
	'leftMotor'
	{ after(grammarAccess.getLeftMovementActionAccess().getLeftMotorKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftMovementAction__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LeftMovementAction__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftMovementAction__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLeftMovementActionAccess().getLeftmoveAssignment_1()); }
	(rule__LeftMovementAction__LeftmoveAssignment_1)
	{ after(grammarAccess.getLeftMovementActionAccess().getLeftmoveAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RightMovementAction__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightMovementAction__Group__0__Impl
	rule__RightMovementAction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RightMovementAction__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightMovementActionAccess().getRightMotorKeyword_0()); }
	'rightMotor'
	{ after(grammarAccess.getRightMovementActionAccess().getRightMotorKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightMovementAction__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightMovementAction__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RightMovementAction__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightMovementActionAccess().getRightmoveAssignment_1()); }
	(rule__RightMovementAction__RightmoveAssignment_1)
	{ after(grammarAccess.getRightMovementActionAccess().getRightmoveAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RotateMovementAction__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RotateMovementAction__Group__0__Impl
	rule__RotateMovementAction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateMovementAction__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRotateMovementActionAccess().getRotateKeyword_0()); }
	'rotate'
	{ after(grammarAccess.getRotateMovementActionAccess().getRotateKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateMovementAction__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RotateMovementAction__Group__1__Impl
	rule__RotateMovementAction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateMovementAction__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRotateMovementActionAccess().getAroundKeyword_1()); }
	'around'
	{ after(grammarAccess.getRotateMovementActionAccess().getAroundKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateMovementAction__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RotateMovementAction__Group__2__Impl
	rule__RotateMovementAction__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateMovementAction__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRotateMovementActionAccess().getRotatePointsParserRuleCall_2()); }
	ruleRotatePoints
	{ after(grammarAccess.getRotateMovementActionAccess().getRotatePointsParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateMovementAction__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RotateMovementAction__Group__3__Impl
	rule__RotateMovementAction__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateMovementAction__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRotateMovementActionAccess().getForKeyword_3()); }
	'for'
	{ after(grammarAccess.getRotateMovementActionAccess().getForKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateMovementAction__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RotateMovementAction__Group__4__Impl
	rule__RotateMovementAction__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateMovementAction__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRotateMovementActionAccess().getDegreesAssignment_4()); }
	(rule__RotateMovementAction__DegreesAssignment_4)
	{ after(grammarAccess.getRotateMovementActionAccess().getDegreesAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateMovementAction__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RotateMovementAction__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateMovementAction__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRotateMovementActionAccess().getDegreesKeyword_5()); }
	'degrees'
	{ after(grammarAccess.getRotateMovementActionAccess().getDegreesKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LeftRotatePoint__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LeftRotatePoint__Group__0__Impl
	rule__LeftRotatePoint__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftRotatePoint__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLeftRotatePointAccess().getLeftKeyword_0()); }
	'left'
	{ after(grammarAccess.getLeftRotatePointAccess().getLeftKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftRotatePoint__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LeftRotatePoint__Group__1__Impl
	rule__LeftRotatePoint__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftRotatePoint__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLeftRotatePointAccess().getWheelKeyword_1()); }
	'wheel'
	{ after(grammarAccess.getLeftRotatePointAccess().getWheelKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftRotatePoint__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LeftRotatePoint__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftRotatePoint__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLeftRotatePointAccess().getLeftdirAssignment_2()); }
	(rule__LeftRotatePoint__LeftdirAssignment_2)
	{ after(grammarAccess.getLeftRotatePointAccess().getLeftdirAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RightRotatePoint__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightRotatePoint__Group__0__Impl
	rule__RightRotatePoint__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RightRotatePoint__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightRotatePointAccess().getRightKeyword_0()); }
	'right'
	{ after(grammarAccess.getRightRotatePointAccess().getRightKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightRotatePoint__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightRotatePoint__Group__1__Impl
	rule__RightRotatePoint__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RightRotatePoint__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightRotatePointAccess().getWheelKeyword_1()); }
	'wheel'
	{ after(grammarAccess.getRightRotatePointAccess().getWheelKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightRotatePoint__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightRotatePoint__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RightRotatePoint__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightRotatePointAccess().getRightdirAssignment_2()); }
	(rule__RightRotatePoint__RightdirAssignment_2)
	{ after(grammarAccess.getRightRotatePointAccess().getRightdirAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MiddleRotatePoint__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MiddleRotatePoint__Group__0__Impl
	rule__MiddleRotatePoint__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MiddleRotatePoint__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMiddleRotatePointAccess().getMiddleKeyword_0()); }
	'middle'
	{ after(grammarAccess.getMiddleRotatePointAccess().getMiddleKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MiddleRotatePoint__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MiddleRotatePoint__Group__1__Impl
	rule__MiddleRotatePoint__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MiddleRotatePoint__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMiddleRotatePointAccess().getToKeyword_1()); }
	'to'
	{ after(grammarAccess.getMiddleRotatePointAccess().getToKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MiddleRotatePoint__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MiddleRotatePoint__Group__2__Impl
	rule__MiddleRotatePoint__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MiddleRotatePoint__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMiddleRotatePointAccess().getTheKeyword_2()); }
	'the'
	{ after(grammarAccess.getMiddleRotatePointAccess().getTheKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MiddleRotatePoint__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MiddleRotatePoint__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MiddleRotatePoint__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMiddleRotatePointAccess().getMiddledirAssignment_3()); }
	(rule__MiddleRotatePoint__MiddledirAssignment_3)
	{ after(grammarAccess.getMiddleRotatePointAccess().getMiddledirAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Expression1__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression1__Group__0__Impl
	rule__Expression1__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression1__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpression1Access().getExpression2ParserRuleCall_0()); }
	ruleExpression2
	{ after(grammarAccess.getExpression1Access().getExpression2ParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression1__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression1__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression1__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpression1Access().getGroup_1()); }
	(rule__Expression1__Group_1__0)*
	{ after(grammarAccess.getExpression1Access().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Expression1__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression1__Group_1__0__Impl
	rule__Expression1__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression1__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpression1Access().getANDexpressionLeftAction_1_0()); }
	()
	{ after(grammarAccess.getExpression1Access().getANDexpressionLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression1__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression1__Group_1__1__Impl
	rule__Expression1__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression1__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpression1Access().getANDKeyword_1_1()); }
	'AND'
	{ after(grammarAccess.getExpression1Access().getANDKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression1__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression1__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression1__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpression1Access().getRightAssignment_1_2()); }
	(rule__Expression1__RightAssignment_1_2)
	{ after(grammarAccess.getExpression1Access().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Expression2__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression2__Group__0__Impl
	rule__Expression2__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression2__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpression2Access().getExpression3ParserRuleCall_0()); }
	ruleExpression3
	{ after(grammarAccess.getExpression2Access().getExpression3ParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression2__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression2__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression2__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpression2Access().getGroup_1()); }
	(rule__Expression2__Group_1__0)*
	{ after(grammarAccess.getExpression2Access().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Expression2__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression2__Group_1__0__Impl
	rule__Expression2__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression2__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpression2Access().getORexpressionLeftAction_1_0()); }
	()
	{ after(grammarAccess.getExpression2Access().getORexpressionLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression2__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression2__Group_1__1__Impl
	rule__Expression2__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression2__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpression2Access().getORKeyword_1_1()); }
	'OR'
	{ after(grammarAccess.getExpression2Access().getORKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression2__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression2__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression2__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpression2Access().getRightAssignment_1_2()); }
	(rule__Expression2__RightAssignment_1_2)
	{ after(grammarAccess.getExpression2Access().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionBracket__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionBracket__Group__0__Impl
	rule__ExpressionBracket__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionBracket__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionBracketAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getExpressionBracketAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionBracket__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionBracket__Group__1__Impl
	rule__ExpressionBracket__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionBracket__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionBracketAccess().getExpAssignment_1()); }
	(rule__ExpressionBracket__ExpAssignment_1)
	{ after(grammarAccess.getExpressionBracketAccess().getExpAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionBracket__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionBracket__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionBracket__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionBracketAccess().getRightParenthesisKeyword_2()); }
	')'
	{ after(grammarAccess.getExpressionBracketAccess().getRightParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TouchLiteral__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TouchLiteral__Group__0__Impl
	rule__TouchLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TouchLiteral__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTouchLiteralAccess().getTouchAssignment_0()); }
	(rule__TouchLiteral__TouchAssignment_0)
	{ after(grammarAccess.getTouchLiteralAccess().getTouchAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TouchLiteral__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TouchLiteral__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TouchLiteral__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTouchLiteralAccess().getHitsKeyword_1()); }
	'hits'
	{ after(grammarAccess.getTouchLiteralAccess().getHitsKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ColorLiteral__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ColorLiteral__Group__0__Impl
	rule__ColorLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ColorLiteral__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColorLiteralAccess().getColorFrontKeyword_0()); }
	'colorFront'
	{ after(grammarAccess.getColorLiteralAccess().getColorFrontKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColorLiteral__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ColorLiteral__Group__1__Impl
	rule__ColorLiteral__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ColorLiteral__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColorLiteralAccess().getSeesKeyword_1()); }
	'sees'
	{ after(grammarAccess.getColorLiteralAccess().getSeesKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColorLiteral__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ColorLiteral__Group__2__Impl
	rule__ColorLiteral__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ColorLiteral__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColorLiteralAccess().getColorKeyword_2()); }
	'color'
	{ after(grammarAccess.getColorLiteralAccess().getColorKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColorLiteral__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ColorLiteral__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ColorLiteral__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColorLiteralAccess().getColorAssignment_3()); }
	(rule__ColorLiteral__ColorAssignment_3)
	{ after(grammarAccess.getColorLiteralAccess().getColorAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DistanceLiteral__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DistanceLiteral__Group__0__Impl
	rule__DistanceLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DistanceLiteral__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDistanceLiteralAccess().getObjectKeyword_0()); }
	'object'
	{ after(grammarAccess.getDistanceLiteralAccess().getObjectKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DistanceLiteral__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DistanceLiteral__Group__1__Impl
	rule__DistanceLiteral__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DistanceLiteral__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDistanceLiteralAccess().getAtKeyword_1()); }
	'at'
	{ after(grammarAccess.getDistanceLiteralAccess().getAtKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DistanceLiteral__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DistanceLiteral__Group__2__Impl
	rule__DistanceLiteral__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DistanceLiteral__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDistanceLiteralAccess().getDistanceAssignment_2()); }
	(rule__DistanceLiteral__DistanceAssignment_2)
	{ after(grammarAccess.getDistanceLiteralAccess().getDistanceAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DistanceLiteral__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DistanceLiteral__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DistanceLiteral__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDistanceLiteralAccess().getCmKeyword_3()); }
	'cm'
	{ after(grammarAccess.getDistanceLiteralAccess().getCmKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EdgeLiteral__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EdgeLiteral__Group__0__Impl
	rule__EdgeLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EdgeLiteral__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEdgeLiteralAccess().getEdgeKeyword_0()); }
	'edge'
	{ after(grammarAccess.getEdgeLiteralAccess().getEdgeKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EdgeLiteral__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EdgeLiteral__Group__1__Impl
	rule__EdgeLiteral__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EdgeLiteral__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEdgeLiteralAccess().getAtKeyword_1()); }
	'at'
	{ after(grammarAccess.getEdgeLiteralAccess().getAtKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EdgeLiteral__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EdgeLiteral__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EdgeLiteral__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEdgeLiteralAccess().getEdgeAssignment_2()); }
	(rule__EdgeLiteral__EdgeAssignment_2)
	{ after(grammarAccess.getEdgeLiteralAccess().getEdgeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MarsRoverExpedition__MissionlistAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMarsRoverExpeditionAccess().getMissionlistMissionParserRuleCall_1_0()); }
		ruleMission
		{ after(grammarAccess.getMarsRoverExpeditionAccess().getMissionlistMissionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MarsRoverExpedition__TasklistAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMarsRoverExpeditionAccess().getTasklistBehaviorParserRuleCall_3_0()); }
		ruleBehavior
		{ after(grammarAccess.getMarsRoverExpeditionAccess().getTasklistBehaviorParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMissionAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getMissionAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__BehaviorlistAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMissionAccess().getBehaviorlistBehaviorNameParserRuleCall_2_0()); }
		ruleBehaviorName
		{ after(grammarAccess.getMissionAccess().getBehaviorlistBehaviorNameParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__EndconditionAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMissionAccess().getEndconditionEndConditionParserRuleCall_4_0()); }
		ruleEndCondition
		{ after(grammarAccess.getMissionAccess().getEndconditionEndConditionParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EndCondition__EndwhenlistAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEndConditionAccess().getEndwhenlistEndWhenParserRuleCall_1_0()); }
		ruleEndWhen
		{ after(grammarAccess.getEndConditionAccess().getEndwhenlistEndWhenParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EndAfter__TimeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEndAfterAccess().getTimeINTTerminalRuleCall_1_0()); }
		RULE_INT
		{ after(grammarAccess.getEndAfterAccess().getTimeINTTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EndWhen__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEndWhenAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getEndWhenAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EndWhen__TimesAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEndWhenAccess().getTimesINTTerminalRuleCall_4_0()); }
		RULE_INT
		{ after(grammarAccess.getEndWhenAccess().getTimesINTTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorName__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBehaviorNameAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getBehaviorNameAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Behavior__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBehaviorAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getBehaviorAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Behavior__SensorExpressionAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBehaviorAccess().getSensorExpressionExpressionParserRuleCall_3_0()); }
		ruleExpression
		{ after(grammarAccess.getBehaviorAccess().getSensorExpressionExpressionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Behavior__ActionlistAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBehaviorAccess().getActionlistActionsParserRuleCall_5_0()); }
		ruleActions
		{ after(grammarAccess.getBehaviorAccess().getActionlistActionsParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftMovementAction__LeftmoveAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLeftMovementActionAccess().getLeftmoveMovementActionParserRuleCall_1_0()); }
		ruleMovementAction
		{ after(grammarAccess.getLeftMovementActionAccess().getLeftmoveMovementActionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightMovementAction__RightmoveAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRightMovementActionAccess().getRightmoveMovementActionParserRuleCall_1_0()); }
		ruleMovementAction
		{ after(grammarAccess.getRightMovementActionAccess().getRightmoveMovementActionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateMovementAction__DegreesAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRotateMovementActionAccess().getDegreesINTTerminalRuleCall_4_0()); }
		RULE_INT
		{ after(grammarAccess.getRotateMovementActionAccess().getDegreesINTTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftRotatePoint__LeftdirAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLeftRotatePointAccess().getLeftdirFBEnumEnumRuleCall_2_0()); }
		ruleFBEnum
		{ after(grammarAccess.getLeftRotatePointAccess().getLeftdirFBEnumEnumRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightRotatePoint__RightdirAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRightRotatePointAccess().getRightdirFBEnumEnumRuleCall_2_0()); }
		ruleFBEnum
		{ after(grammarAccess.getRightRotatePointAccess().getRightdirFBEnumEnumRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MiddleRotatePoint__MiddledirAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMiddleRotatePointAccess().getMiddledirLREnumEnumRuleCall_3_0()); }
		ruleLREnum
		{ after(grammarAccess.getMiddleRotatePointAccess().getMiddledirLREnumEnumRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MovementAction__ActionenumAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMovementActionAccess().getActionenumActionEnumEnumRuleCall_0()); }
		ruleActionEnum
		{ after(grammarAccess.getMovementActionAccess().getActionenumActionEnumEnumRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression1__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpression1Access().getRightExpression2ParserRuleCall_1_2_0()); }
		ruleExpression2
		{ after(grammarAccess.getExpression1Access().getRightExpression2ParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression2__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpression2Access().getRightExpression3ParserRuleCall_1_2_0()); }
		ruleExpression3
		{ after(grammarAccess.getExpression2Access().getRightExpression3ParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionBracket__ExpAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionBracketAccess().getExpExpressionParserRuleCall_1_0()); }
		ruleExpression
		{ after(grammarAccess.getExpressionBracketAccess().getExpExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TouchLiteral__TouchAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTouchLiteralAccess().getTouchTouchEnumEnumRuleCall_0_0()); }
		ruleTouchEnum
		{ after(grammarAccess.getTouchLiteralAccess().getTouchTouchEnumEnumRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColorLiteral__ColorAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColorLiteralAccess().getColorColorEnumEnumRuleCall_3_0()); }
		ruleColorEnum
		{ after(grammarAccess.getColorLiteralAccess().getColorColorEnumEnumRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DistanceLiteral__DistanceAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDistanceLiteralAccess().getDistanceINTTerminalRuleCall_2_0()); }
		RULE_INT
		{ after(grammarAccess.getDistanceLiteralAccess().getDistanceINTTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EdgeLiteral__EdgeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEdgeLiteralAccess().getEdgeEdgeEnumEnumRuleCall_2_0()); }
		ruleEdgeEnum
		{ after(grammarAccess.getEdgeLiteralAccess().getEdgeEdgeEnumEnumRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
