package robot.generator

import robot.dSL.Behavior

class BehaviorGenerator {
	
	def static toText(Behavior behavior){
		'''
		package test.master;
		import lejos.robotics.subsumption.Behavior;
		import lejos.utility.Delay;
		
		public class «Auxiliary.toClass(behavior.name)» implements Behavior{
					
			Goals goals;
			ModelMaster m;
			private boolean suppressed = false;
			
			public «Auxiliary.toClass(behavior.name)»(ModelMaster m, Goals goals){
				this.m = m;
				this.goals = goals;
			}
			
			@Override
			public boolean takeControl() {
				«FOR sensor : Auxiliary.getSensors(behavior.sensorExpression)»
				m.«sensor».fetchSample(m.«sensor»Samples, 0);
				«ENDFOR»
				return «Auxiliary.getControlReturnString(behavior.sensorExpression)»;
			}
			
			@Override
			public void action() {
				goals.«behavior.name»++;
				suppressed = false;
				float g;
				«FOR action : behavior.actionlist»
					«Auxiliary.action2Text(action)»
				«ENDFOR»
				Delay.msDelay(100);
				m.rm.forward();
				Delay.msDelay(100);
			}
			
			@Override
			public void suppress() {
				suppressed = true;
			}
		}
				'''	
			}
}